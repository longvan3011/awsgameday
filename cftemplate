{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "GameDay meta CF template to create users and other items.",
    "Parameters": {
        "OtherAccountNumber": {
            "AllowedPattern": "[0-9]+",
            "Default": "747834080181",
            "Description": "The 12 digit AWS account number to grant access to.",
            "MaxLength": "12",
            "MinLength": "12",
            "Type": "String"
        },
        "SNSArn": {
            "Default": "arn:aws:sns:us-west-2:747834080181:gameday-cluster-nab-RegistratorSNSTopic-M0WWE2346Q8E",
            "Description": "The ARN of the team registration SNS topic",
            "Type": "String"
        }
    },
    "Resources": {
        "GameDayPolicy": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "*"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        }
                    ]
                },
                "PolicyName": "GameDayPolicy",
                "Roles": [
                    {
                        "Ref": "GameDayRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "PlayerRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            },
                            "Sid": ""
                        },
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "events.amazonaws.com"
                            },
                            "Sid": ""
                        },
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Sid": ""
                        },
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "elasticbeanstalk.amazonaws.com"
                            },
                            "Sid": ""
                        },
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "apigateway.amazonaws.com"
                            },
                            "Sid": ""
                        },
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ecs.amazonaws.com"
                            },
                            "Sid": ""
                        },
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                            },
                            "Sid": ""
                        }
                    ],
                    "Version": "2012-10-17"
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "PlayerInstanceProfile": {
            "Properties": {
                "Roles": [
                    {
                        "Ref": "PlayerRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "GameDayRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "arn:aws:iam::",
                                            {
                                                "Ref": "OtherAccountNumber"
                                            },
                                            ":root"
                                        ]
                                    ]
                                }
                            },
                            "Sid": ""
                        }
                    ]
                },
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        },
        "GameDayUser1": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "LoginProfile": {
                    "Password": "gameday",
                    "PasswordResetRequired": "true"
                },
                "UserName": "cloudadmin1",
                "Path": "/"
            }
        },
        "GameDayUser2": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "LoginProfile": {
                    "Password": "gameday",
                    "PasswordResetRequired": "true"
                },
                "UserName": "cloudadmin2",
                "Path": "/"
            }
        },
        "GameDayUser3": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "LoginProfile": {
                    "Password": "gameday",
                    "PasswordResetRequired": "true"
                },
                "UserName": "cloudadmin3",
                "Path": "/"
            }
        },
        "GameDayUser4": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "LoginProfile": {
                    "Password": "gameday",
                    "PasswordResetRequired": "true"
                },
                "UserName": "cloudadmin4",
                "Path": "/"
            }
        },
        "GameDayUser5": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "LoginProfile": {
                    "Password": "gameday",
                    "PasswordResetRequired": "true"
                },
                "UserName": "cloudadmin5",
                "Path": "/"
            }
        },
        "GameDayUserMNGR": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AdministratorAccess"
                ],
                "LoginProfile": {
                    "Password": "gamedayadmin"
                },
                "UserName": "cloudmanager",
                "Path": "/"
            }
        },
        "RegisterForGameday": {
            "Properties": {
                "AccountId": {
                    "Ref": "AWS::AccountId"
                },
                "PlayerRoleArn": {
                    "Fn::GetAtt": [
                        "PlayerRole",
                        "Arn"
                    ]
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "GameDayRole",
                        "Arn"
                    ]
                },
                "ServiceToken": {
                    "Ref": "SNSArn"
                }
            },
            "Type": "Custom::GamedayRegister",
            "Version": "1.0"
        },
        "GamedayRunEC2InstancesPolicyManaged": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Policy to control what EC2 run instances actions can be taken",
                "Path": "/",
                "Users": [
                    {
                        "Ref": "GameDayUser1"
                    },
                    {
                        "Ref": "GameDayUser2"
                    },
                    {
                        "Ref": "GameDayUser3"
                    },
                    {
                        "Ref": "GameDayUser4"
                    },
                    {
                        "Ref": "GameDayUser5"
                    }
                ],
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": "ec2:RunInstances",
                            "Condition": {
                                "StringEquals": {
                                    "ec2:InstanceType": [
                                        "t2.micro"
                                    ]
                                }
                            },
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:ec2:*:*:instance/*"
                            ],
                            "Sid": "OnlyAllowLaunchOfT2Instances"
                        },
                        {
                            "Action": "ec2:RunInstances",
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:ec2:*::image/ami-*",
                                "arn:aws:ec2:*:*:subnet/*",
                                "arn:aws:ec2:*:*:network-interface/*",
                                "arn:aws:ec2:*:*:volume/*",
                                "arn:aws:ec2:*:*:key-pair/*",
                                "arn:aws:ec2:*:*:security-group/*"
                            ],
                            "Sid": "AllowAllTheOtherRunInstancesResources"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Roles": [
                    {
                        "Ref": "PlayerRole"
                    }
                ]
            }
        },
        "GamedayOtherServicePermissionsPolicyManaged": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Policy to control what other services can be accessed",
                "Path": "/",
                "Users": [
                    {
                        "Ref": "GameDayUser1"
                    },
                    {
                        "Ref": "GameDayUser2"
                    },
                    {
                        "Ref": "GameDayUser3"
                    },
                    {
                        "Ref": "GameDayUser4"
                    },
                    {
                        "Ref": "GameDayUser5"
                    }
                ],
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "s3:*",
                                "route53:*",
                                "route53domains:*",
                                "cloudformation:*",
                                "cloudwatch:*",
                                "sns:*",
                                "cloudtrail:*",
                                "autoscaling:*",
                                "elasticloadbalancing:*",
                                "cloudfront:*",
                                "trustedadvisor:*",
                                "iam:changepassword",
                                "iam:List*",
                                "iam:Get*",
                                "iam:PassRole",
                                "elastiCache:*",
                                "ecs:*",
                                "events:*",
                                "logs:*",
                                "ecr:*",
                                "lambda:*",
                                "dynamodb:*",
                                "elasticbeanstalk:*",
                                "acm:ListCertificates"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "OtherAccess"
                        },
                        {
                            "Action": [
                                "cloudformation:DeleteStack",
                                "cloudformation:UpdateStack"
                            ],
                            "Effect": "Deny",
                            "Resource": {
                                "Fn::Join": [
                                    ":",
                                    [
                                        "arn",
                                        "aws",
                                        "cloudformation",
                                        {
                                            "Ref": "AWS::Region"
                                        },
                                        {
                                            "Ref": "AWS::AccountId"
                                        },
                                        {
                                            "Fn::Join": [
                                                "/",
                                                [
                                                    "stack",
                                                    {
                                                        "Ref": "AWS::StackName"
                                                    },
                                                    "*"
                                                ]
                                            ]
                                        }
                                    ]
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Roles": [
                    {
                        "Ref": "PlayerRole"
                    }
                ]
            }
        },
        "GamedayOtherEC2PermissionsPolicyManaged": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Policy to control other EC2 permissions and block Spot and Reserved Instances",
                "Path": "/",
                "Users": [
                    {
                        "Ref": "GameDayUser1"
                    },
                    {
                        "Ref": "GameDayUser2"
                    },
                    {
                        "Ref": "GameDayUser3"
                    },
                    {
                        "Ref": "GameDayUser4"
                    },
                    {
                        "Ref": "GameDayUser5"
                    }
                ],
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "ec2:Accept*",
                                "ec2:Allocate*",
                                "ec2:Assign*",
                                "ec2:Associate*",
                                "ec2:Attach*",
                                "ec2:Authorize*",
                                "ec2:Bundle*",
                                "ec2:Cancel*",
                                "ec2:Confirm*",
                                "ec2:Copy*",
                                "ec2:Create*",
                                "ec2:Delete*",
                                "ec2:Deregister*",
                                "ec2:Describe*",
                                "ec2:Detach*",
                                "ec2:Disable*",
                                "ec2:Disassociate*",
                                "ec2:Enable*",
                                "ec2:Get*",
                                "ec2:Import*",
                                "ec2:Modify*",
                                "ec2:Monitor*",
                                "ec2:Move*",
                                "ec2:Reboot*",
                                "ec2:Register*",
                                "ec2:Reject*",
                                "ec2:Release*",
                                "ec2:Replace*",
                                "ec2:Report*",
                                "ec2:Reset*",
                                "ec2:Restore*",
                                "ec2:Revoke*",
                                "ec2:Start*",
                                "ec2:Stop*",
                                "ec2:Terminate*",
                                "ec2:Unassign*",
                                "ec2:Unmonitor*"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Sid": "AllowAllOtherEC2ActionsExceptSpotAndReserved"
                        },
                        {
                            "Action": "apigateway:*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Sub": "arn:aws:apigateway:${AWS::Region}::*"
                            },
                            "Sid": "Stmt1479239367624"
                        },
                        {
                            "Action": "execute-api:*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:*"
                            },
                            "Sid": "Stmt1479239404857"
                        },
                        {
                            "Action": "sqs:*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Sub": "arn:aws:sqs:${AWS::Region}:*"
                            },
                            "Sid": "Stmt1479239182610"
                        },
                        {
                            "Action": "sns:*",
                            "Effect": "Allow",
                            "Resource": {
                                "Fn::Sub": "arn:aws:sns:${AWS::Region}:*"
                            },
                            "Sid": "Stmt1479239209771"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Roles": [
                    {
                        "Ref": "PlayerRole"
                    }
                ]
            }
        },
        "GamedayRestrictRegionPolicyManaged": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Policy to control what region users can use",
                "Path": "/",
                "Users": [
                    {
                        "Ref": "GameDayUser1"
                    },
                    {
                        "Ref": "GameDayUser2"
                    },
                    {
                        "Ref": "GameDayUser3"
                    },
                    {
                        "Ref": "GameDayUser4"
                    },
                    {
                        "Ref": "GameDayUser5"
                    }
                ],
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "ec2:*"
                            ],
                            "Condition": {
                                "StringNotEquals": {
                                    "ec2:Region": [
                                        {
                                            "Ref": "AWS::Region"
                                        }
                                    ]
                                }
                            },
                            "Effect": "Deny",
                            "Resource": "*",
                            "Sid": "ControlAccessToRegion"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Roles": [
                    {
                        "Ref": "PlayerRole"
                    }
                ]
            }
        },
        "GamedayAllowUserIAMKeyAccessPolicyManaged": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Policy to allow a user to admin their own keys",
                "Path": "/",
                "Users": [
                    {
                        "Ref": "GameDayUser1"
                    },
                    {
                        "Ref": "GameDayUser2"
                    },
                    {
                        "Ref": "GameDayUser3"
                    },
                    {
                        "Ref": "GameDayUser4"
                    },
                    {
                        "Ref": "GameDayUser5"
                    }
                ],
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "iam:*LoginProfile",
                                "iam:*AccessKey*",
                                "iam:*SSHPublicKey*"
                            ],
                            "Resource": "arn:aws:iam::*:user/${aws:username}"
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Roles": [
                    {
                        "Ref": "PlayerRole"
                    }
                ]
            }
        }
    }
}
